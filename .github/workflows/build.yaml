# GitHub Actions workflow
# https://help.github.com/en/actions/reference
#
# Copyright Subatomix Research Inc.
# SPDX-License-Identifier: MIT

name: Build
run-name: Build

on:
  push:
    branches:
      - main
      - next
      - release/*
    tags:
      - release/*
  pull_request:
    branches:
      - main
      - release/*
  workflow_dispatch:
    # no options

permissions:
  contents: write # required by ncipollo/release-action@v1

env:
  # Minimize noise from dotnet CLI
  DOTNET_NOLOGO: 1

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    #url: https://github.com/actions/virtual-environments

    services:
      sql:
        image: mcr.microsoft.com/mssql/server:2022-latest
        ports:
          - 1433:1433
          - 3341:1433
        env:
          ACCEPT_EULA: true
          MSSQL_SA_PASSWORD: ${{ secrets.MSSQL_SA_PASSWORD }}
          MSSQL_COLLATION: Latin1_General_100_CI_AI_SC_UTF8
          MSSQL_MEMORY_LIMIT_MB: 1024
        options: >-
          --health-cmd "/opt/mssql-tools/bin/sqlcmd -S . -U sa -P $MSSQL_SA_PASSWORD -Q 'PRINT HOST_NAME();'"
          --health-start-period 20s
          --health-interval 15s
          --health-timeout 10s
          --health-retries 2

    steps:
      - name: Check Out Code
        uses: actions/checkout@v4
        #url: https://github.com/actions/checkout

      - name: Configure .NET
        uses: actions/setup-dotnet@v4
        #url: https://github.com/actions/setup-dotnet
        with:
          dotnet-version: |
            6.0.x
            8.0.x

      - name: Stamp Version
        id: stamp
        run: >
          dotnet build .root.targets -c Release
          -p:StampOnBuild=true
          -p:SetGitHubActionsVersion=true
          -p:Branch=${{ github.ref }}
          -p:Counter=${{ github.run_number }}
          -p:RepositoryCommit=${{ github.sha }}

      - name: Publish Version
        run: |
          echo "
          |            |                           |
          |:-----------|:--------------------------|
          | Version    | \`$VERSION\`              |
          | Branch/Tag | \`$GITHUB_REF\` $HEAD_REF |
          | Commit     | \`$GITHUB_SHA\` $HEAD_SHA |
          " >> "$GITHUB_STEP_SUMMARY"
        env:
          VERSION:  ${{ steps.stamp.outputs.version }}
          HEAD_REF: ${{ github.event.pull_request && format('(head = `{0}`)', github.event.pull_request.head.ref) }}
          HEAD_SHA: ${{ github.event.pull_request && format('(head = `{0}`)', github.event.pull_request.head.sha) }}

      - name: Restore NuGet Packages
        run: dotnet restore

      - name: Build 1
        run: >
          dotnet build PSql.private --no-restore -c Release
          -p:TreatWarningsAsErrors=true

      - name: Build 2
        run: >
          dotnet build --no-restore -c Release
          -p:TreatWarningsAsErrors=true
          -p:PackageOutputPath=${{ runner.temp }}/dist/

      - name: Test
        run: >
          dotnet test --no-build -c Release
          --settings Coverlet.runsettings
          --results-directory ${{ runner.temp }}/coverage/raw
        env:
          MSSQL_SA_PASSWORD: ${{ secrets.MSSQL_SA_PASSWORD }}

      - name: Prepare Coverage Report
        uses: danielpalme/ReportGenerator-GitHub-Action@5
        #url: https://github.com/danielpalme/ReportGenerator-GitHub-Action
        with:
          reports: ${{ runner.temp }}/coverage/raw/**/coverage.opencover.xml
          targetdir: ${{ runner.temp }}/coverage
          reporttypes: Html;MarkdownSummaryGithub;Badges
          verbosity: Warning

      - name: Publish Coverage Summary
        run: >
          { echo '## Coverage'; sed '/^#/d' "$REPORT_PATH"; } >> "$GITHUB_STEP_SUMMARY"
        env:
          REPORT_PATH: ${{ runner.temp }}/coverage/SummaryGithub.md

      - name: Save Coverage Report
        uses: actions/upload-artifact@v4
        #url: https://github.com/actions/upload-artifact
        with:
          name: Coverage Report
          path: ${{ runner.temp }}/coverage
          if-no-files-found: error

      - name: Save Module
        uses: actions/upload-artifact@v4
        #url: https://github.com/actions/upload-artifact
        with:
          name: Module
          path: ${{ runner.temp }}/dist
          if-no-files-found: error

      - name: Publish Module
        if: startsWith(github.ref, 'refs/tags/release/')
        shell: pwsh
        run: >
          dotnet nuget push "${{ runner.temp }}/dist/*.nupkg"
          -s https://www.powershellgallery.com/
          -k $env:PSGALLERY_API_KEY
          --skip-duplicate
          --no-symbols
        env:
          PSGALLERY_API_KEY: ${{ secrets.PSGALLERY_API_KEY }}

      - name: Create Release
        uses: ncipollo/release-action@v1
        #url: https://github.com/ncipollo/release-action
        if: startsWith(github.ref, 'refs/tags/release/')
        with:
          name: ${{ steps.stamp.outputs.version }}
          prerelease: ${{ contains('-', steps.stamp.outputs.version) }}
          draft: true
          bodyFile: CHANGES.md
          artifacts: ${{ runner.temp }}/dist/*nupkg
          artifactErrorsFailBuild: true
          token: ${{ secrets.GITHUB_TOKEN }}
