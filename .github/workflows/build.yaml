# GitHub Actions workflow
# https://help.github.com/en/actions/reference
#
# Copyright 2021 Jeffrey Sharp
# 
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
# 
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

name: Build

on:
  push:
    branches:
      - master
      - release/*
    tags:
      - release/*
  pull_request:
    branches:
      - master
      - release/*

env:
  # Minimize noise from dotnet CLI
  DOTNET_NOLOGO: 1

jobs:
  build:
    name: Build
    runs-on: ubuntu-20.04
    #url: https://github.com/actions/virtual-environments

    services:
      sql:
        image: mcr.microsoft.com/mssql/server:2019-latest
        ports:
          - 1433:1433
          - 3341:1433
        env:
          ACCEPT_EULA: true
          MSSQL_SA_PASSWORD: ${{ secrets.MSSQL_SA_PASSWORD }}
          MSSQL_COLLATION: Latin1_General_100_CI_AI_SC_UTF8
          MSSQL_MEMORY_LIMIT_MB: 1024
        options: >-
          --health-cmd "/opt/mssql-tools/bin/sqlcmd -S . -U sa -P $MSSQL_SA_PASSWORD -Q 'PRINT HOST_NAME();'"
          --health-start-period 20s
          --health-interval 15s
          --health-timeout 10s
          --health-retries 2

    steps:
      - name: Check Out Code
        uses: actions/checkout@v2
        #url: https://github.com/actions/checkout

      - name: Configure .NET Core 3.1
        uses: actions/setup-dotnet@v1
        #url: https://github.com/actions/setup-dotnet
        with:
          dotnet-version: 3.1.x

      - name: Configure .NET 6.0
        uses: actions/setup-dotnet@v1
        #url: https://github.com/actions/setup-dotnet
        with:
          dotnet-version: 6.0.x

      - name: Stamp Version
        id: stamp
        run: >
          dotnet build .root.targets -c Release
          -p:StampOnBuild=true
          -p:Branch=${{ github.ref }}
          -p:Counter=${{ github.run_number }}
          -p:RepositoryCommit=${{ github.sha }}

      - name: Restore NuGet Packages
        run: dotnet restore

      - name: Build
        run: >
          dotnet build --no-restore -c Release
          -p:PackageOutputPath=${{ runner.temp }}/dist

      - name: Test
        run: >
          dotnet test --no-build -c Release
          --settings Coverlet.runsettings
          --results-directory:${{ runner.temp }}/coverage/raw
        env:
          MSSQL_SA_PASSWORD: ${{ secrets.MSSQL_SA_PASSWORD }}

      - name: Prepare Coverage Report
        uses: danielpalme/ReportGenerator-GitHub-Action@4.8.7
        #url: https://github.com/danielpalme/ReportGenerator-GitHub-Action
        with:
          reports: ${{ runner.temp }}/coverage/raw/**/coverage.opencover.xml
          targetdir: ${{ runner.temp }}/coverage
          reporttypes: Cobertura;HtmlInline;Badges;TeamCitySummary
          verbosity: Warning

      - name: Save Package
        uses: actions/upload-artifact@v2
        #url: https://github.com/actions/upload-artifact
        with:
          name: Packages
          path: ${{ runner.temp }}/dist
          if-no-files-found: error

      - name: Save Coverage Report
        uses: actions/upload-artifact@v2
        #url: https://github.com/actions/upload-artifact
        with:
          name: Coverage Report
          path: ${{ runner.temp }}/coverage
          if-no-files-found: error

      - name: Publish Package
        if: startsWith(github.ref, 'refs/tags/release/')
        shell: pwsh
        run: >
          dotnet nuget push "${{ runner.temp }}/dist/*.nupkg"
          -s https://www.powershellgallery.com/
          -k $env:PSGALLERY_API_KEY
          --skip-duplicate
          --no-symbols 1
        env:
          PSGALLERY_API_KEY: ${{ secrets.PSGALLERY_API_KEY }}
